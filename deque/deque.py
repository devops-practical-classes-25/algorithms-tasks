class Node:
    """
    Узел двусвязного списка.

    Узел содержит:
    - `value` (int): значение, хранимое в узле.
    - `next` (`Node` | None): ссылка на следующий узел в списке.
    - `prev` (`Node` | None): ссылка на предыдущий узел в списке.
    """
    def __init__(self, value=0):
        self.value = value
        self.next = None
        self.prev = None


class Deque:
    """
    Двусторонняя очередь, построенная на двусвязном списке.

    Двусторонняя очередь позволяет добавлять и удалять элементы с обоих концов.
    Эта реализация поддерживает фиксированный размер и автоматически удаляет
    старые элементы при добавлении новых.

    Основные операции:
    - `appendleft(value)`: добавляет элемент в начало очереди.
    - `pop()`: удаляет и возвращает последний элемент.
    - `get(index)`: получает элемент по индексу (0 — первый, 1 — второй и т. д.).

    Параметры:
    - `max_size` (int): максимальный размер очереди.

    Атрибуты:
    - `size` (int): текущий размер очереди.
    - `head` (`Node` | None): первый элемент очереди.
    - `tail` (`Node` | None): последний элемент очереди.
    """
    pass